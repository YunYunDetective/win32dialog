Scripts.execStorage("win32dialog.tjs");

class MyDialog extends WIN32DialogEX {
	// ids
	var ID_BTN = 1000;
	var ID_EDT = 1001;
	var ID_LST = 1002;
	var ID_CMB = 1003;

	var template = %[
	helpID:0,
	exStyle:0, //.WS_EX_TOOLWINDOW,
	style: DS_MODALFRAME | DS_CENTER | WS_POPUP | WS_CAPTION | WS_SYSMENU | DS_SETFONT,
	x:0,
	y:0,
	cx:100,
	cy:100,
	//menu:"",
	//windowClass:"",
	title:"テストダイアログ（テンプレート版）",
	pointSize: 12,
	weight: FW_NORMAL,
	italic: false,
	typeFace:"ＭＳ Ｐゴシック",
	items :
		[
			GroupBox("グループ",,  0, 0, 100, 100),
			PushButton("ボタン１", ID_BTN, 10, 20, 80, 10),
			EditText(              ID_EDT, 10, 30, 80, 10),
			ListBox(               ID_LST, 10, 40, 80, 40),
			ComboBox(              ID_CMB, 10, 80, 80, 80, CBS_DROPDOWNLIST|WS_VSCROLL|WS_TABSTOP),
		]
	];

	// 初期化パラメータ辞書
	// id : %[ params ]（単指定） または id:[ %[ params1 ], ... %[ paramsN ] ]（順序指定） の形式
	var initParams = %[

		ID_CMB => [ // list -> select の順に設定するので配列で順序を規定して渡す
			%[  setComboBoxTexts: [
				"そのいち",
				"そのに",
				"そのさん",
				"そのよん" ]
				],
			%[  selectComboBox: 0 ],
			],

		ID_LST =>
		%[  setListBoxTexts: [
			"そのいち",
			"そのに",
			"そのさん",
			"そのよん" ],
			],
		];
	
	function MyDialog(isRes) {
		super.WIN32DialogEX();

		if (isRes) {
			// リソース読み込み
			loadResource("testres.dll", "TEST_DIALOG");
			// 初期化パラメータを設定（itemMap強制設定）
			setInitParams(initParams, true);
		} else {
			// テンプレート生成
			store(template);
			// 初期化パラメータを設定
			setInitParams(initParams);
		}
	}
	function onInit() {
		super.onInit(...);
		setCenterPosition();
		setItemFocus(ID_BTN);
	}

	// デバグ用
	function onCommand(msg, wp, lp) {
		dm("onCommand", *);
		return super.onCommand(...);
	}
}

function createMenuItem(win, caption, onclick) {
	var menuItem = new MenuItem(win, caption);
	with (menuItem) {
		.visible = true;
		.onClick = onclick incontextof win;
	}
	return menuItem;
}
function testMyDialog(win, flg) {
	var dlg = new MyDialog(flg);
	var rslt = dlg.open(win);

	var ext = [];
	ext.assign(rslt.items);
	dm("MyDialog:", rslt.result, ext*);
}

//Debug.controller.visible=true;
Debug.console.visible=true;

var dm = Debug.message;
var win = new Window();
with (win) {
	._onCloseQuery = .onCloseQuery;
	.onCloseQuery = function() { _onCloseQuery(true); } incontextof win;
	.innerSunken = false;
	.caption = "WIN32Dialog test script";
	.setSize(640, 480);
	.menu.add(createMenuItem(win, "MyDialogTest",     function{ testMyDialog(win, 0); }));
	.menu.add(createMenuItem(win, "LoadResourceTest", function{ testMyDialog(win, 1); }));
	.menu.add(createMenuItem(win, "MessageBoxTest",   function{
		with (WIN32Dialog) dm(.messageBox(global.win, "テキスト", "キャプション", .MB_OKCANCEL|.MB_ICONEXCLAMATION|.MB_OWNER_CENTER) == .IDOK);
	}));
	.visible = true;
}

